---
title: "Spaceship Titanic Rescue"
author: "Adam Gilbert"
format: 
  html:
    theme: cerulean
---

```{r message = FALSE}
library(tidyverse)
library(tidymodels)
library(patchwork)
library(ggridges)
library(scales)
library(kableExtra)

data <- read_csv("https://raw.githubusercontent.com/agmath/agmath.github.io/master/data/classification/spaceship_titanic.csv")
```

## Statement of Purpose

Like its namesake vessel, the *Spaceship Titanic* encountered tragedy when several of its passengers were warped to an alternate dimension during flight! This analysis is a *post-mortem* on the flight and passenger list so that we may better understand who is at risk for interdimensional transport during spaceflight and can take future precautionary measures.

## Introduction

The year is 2063. We've come a long way from the early 2020's, where billionaire tech entrepreneurs launched tiny rockets, holding a handful of celebrities or wealthy elites, into near-Earth orbit for an exorbitant pricetag. The future is now...well, *was* last week... Things are much more uncertain now. We were so excited with the launch of the Spaceship *Titanic*. It was supposed to be the beginning of a new era -- affordable, long-range space travel for everyone. In hindsight, perhaps naming the thing the *Titanic* was a poor decision -- too tempting for fate and karma.

In any case, space travel is an important venture for humanity at this point in our history as a species. Demand is high, even with last week's disaster. We have a vested interest in safe and reliable travel through the cosmos and need to better understand what happened to the travelers who've disappeared and why it happened to them and not other passengers. Demand for space travel was expected to reach 86 million travelers next year -- we can't continue if we only expect 43 million passengers to arrive at their intended destination.

## Exploratory Data Analysis

The original data set on the passengers contained `r data %>% nrow()` passengers and `r data %>% ncol()` variables. We can see the first few passengers' worth of data printed out below.

```{r}
data %>%
  head() %>%
  kable() %>%
  kable_styling(bootstrap_options = c("hover", "striped"))
```

I'll reformat the column names using `{janitor}` and split the data into training and test sets. We'll use the training data for exploratory purposes and model construction and then those held-out test passengers to test/validate our model's performance. 

```{r}
names(data) <- janitor::make_clean_names(names(data))

set.seed(92323)
data_splits <- initial_split(data, prop = 0.85)
train <- training(data_splits)
test <- testing(data_splits)
```

The first few passengers in the training set appear below.

```{r}
train %>%
  head() %>%
  kable() %>%
  kable_styling(bootstrap_options = c("hover", "striped"))
```

The training set includes `r train %>% nrow()` passengers while the test set includes the remaining `r test %>% nrow()` passengers.

#### Univarite Analyses

Since our goal is to understand who was transported to an alternate dimension during flight and perhaps gain some insight as to why they were transported, we'll start by understanding the `transported` variable and the distributions of the other variables available to us.

```{r}
train %>%
  mutate(transported = ifelse(transported == TRUE, "yes", "no")) %>%
  ggplot() + 
  geom_bar(aes(x = transported)) + 
  labs(title = "Distribution of Transported Passengers",
       x = "Interdimensional Transport Status",
       y = "Count")

pct_transported <- train %>%
  mutate(transported = ifelse(transported == TRUE, "yes", "no")) %>%
  count(transported) %>%
  ungroup() %>%
  mutate(pct = 100*n/sum(n)) %>%
  filter(transported == "yes") %>%
  pull(pct)
```

The percentage of passengers transported in the training set is about `r round(pct_transported, 2)`%. Let's look at the distributions of the other categorical variables in the data set.

```{r echo = FALSE}
p_planet <- train %>%
  ggplot() + 
  geom_bar(mapping = aes(y = home_planet)) + 
  labs(title = "Boarding Planet",
       x = "Count",
       y = "")

p_cryo <- train %>%
  mutate(cryo_sleep = ifelse(cryo_sleep == TRUE, "yes", "no")) %>%
  ggplot() + 
  geom_bar(aes(x = cryo_sleep)) + 
  labs(title = "CryoSleep Selection",
       x = "",
       y = "Count")

p_vip <- train %>%
  mutate(vip = ifelse(vip == TRUE, "yes", "no")) %>% 
  ggplot() + 
  geom_bar(aes(x = vip)) + 
  labs(title = "VIP Status",
       x = "",
       y = "Count")

p_dest <- train %>%
  ggplot() + 
  geom_bar(aes(y = destination)) +
  labs(title = "Destination Planet",
       x = "Count",
       y = "")

vip_prop <- train %>%
  count(vip) %>%
  mutate(vip_prop = n/sum(n)) %>%
  filter(vip == TRUE) %>%
  pull(vip_prop)

all_4_na_count <- train %>%
  filter(is.na(home_planet) & is.na(cryo_sleep) & is.na(destination) & is.na(vip)) %>%
  nrow()

(p_planet + p_cryo) / (p_dest + p_vip)
```

From the top-left plot, we see that the majority of passengers board on Earth, while fewer passengers board on Europa and Mars. Some passengers have no boarding planet information (`NA`) -- perhaps these passengers are crew members. In the top-right plot, we see that nearly 2/3 of passengers choose the Cryo Sleep option, while around 1/3 do not. Again, some passengers have missing data here. The distribution of destination planet is shown in the lower-right, and tells us that the most popular destination (by a large margin) is TRAPPIST-1e. The only other two destination planets are PSO J318.5-22 and 55 Cancri e. As in the previous plots, some passengers do not have an identified destination. Finally, the proportion of passengers with VIP status is about `r 100*round(vip_prop, 4)`.

In each of the plots, we identified several passengers with missing values. There are `r all_4_na_count` passengers missing information for all four of these variables. This means that our earlier conjecture about those passengers being crew is unlikely.

Let's continue on to view the distributions of the numerical predictors available to us. We'll start with the distribution of passenger ages.

```{r echo = FALSE, message = FALSE, fig.width = 4, fig.height = 3}
p_age <- train %>%
  ggplot() + 
  geom_histogram(aes(x = age)) + 
  labs(title = "Passenger Ages",
       x = "Age",
       y = "")

p_age
```

The plot above shows a [*near*] 0-inflated distribution. That is, there is an inflated number of observations near 0, given the shape of the rest of the distribution. Ages are right-skewed, with a median passenger age of `r train %>% summarize(median_age = median(age, na.rm = TRUE))` years old. Next we'll look at the distribution of room service charges.

```{r echo = FALSE, message = FALSE, warning = FALSE}
p_room_service <- train %>%
  ggplot() + 
  geom_density(aes(x = room_service), fill = "purple") + 
  geom_boxplot(aes(x = room_service, y = -0.005), width = 0.0025, fill = "purple") +
  labs(title = "Room Service Money Spent",
       x = "Expenditure",
       y = "")

p_room_service_log <- train %>%
  ggplot() + 
  geom_density(aes(x = room_service), fill = "purple") + 
  geom_boxplot(aes(x = room_service, y = -0.1), width = 0.05, fill = "purple") +
  scale_x_log10() + 
  labs(title = "Room Service Money Spent",
       x = "Expenditure",
       y = "")

p_room_service + p_room_service_log
```

Both of the plots above show the distribution of room service expenditures. From the plot on the left, we can see that the distribution is very strongly right-skewed. The majority of passengers spent very little on room service, but there were some passengers who ran up extremely large tabs! The plot on the right shows the same variable but on a logarithmic scale. This particular transformation ignores passengers who did not spend any money on room service. From this plot, we actually see that the median room service expenditure among passengers who utilized room service is quite high -- it is about `r train %>% filter(room_service > 0) %>% summarize(median_room_service = median(room_service, na.rm = TRUE))`. We'll continue our exploration of the available numerical features below, by working with the expenditures at the food court, shopping mall, spa, and VR deck. All of these are right skewed so we'll just show the distributions on a logarithmic scale.

```{r message = FALSE, warning = FALSE}
p_food <- train %>%
  ggplot() + 
  geom_density(aes(x = food_court), fill = "purple") + 
  geom_boxplot(aes(x = food_court, y = -0.075), 
               fill = "purple", width = 0.05) +
  scale_x_log10() +
  labs(title = "Food Court Expenditures",
       x = "Money Spent",
       y = "")

p_shop <- train %>%
  ggplot() + 
  geom_density(aes(x = shopping_mall), fill = "purple") + 
  geom_boxplot(aes(x = shopping_mall, y = -0.075), 
               fill = "purple", width = 0.05) +
  scale_x_log10() +
  labs(title = "Shopping Mall Expenditures",
       x = "Money Spent",
       y = "")

p_spa <- train %>%
  ggplot() + 
  geom_density(aes(x = spa), fill = "purple") + 
  geom_boxplot(aes(x = spa, y = -0.075), 
               fill = "purple", width = 0.05) +
  scale_x_log10() +
  labs(title = "Spa Expenditures",
       x = "Money Spent",
       y = "")

p_vr <- train %>%
  ggplot() + 
  geom_density(aes(x = vr_deck), fill = "purple") + 
  geom_boxplot(aes(x = vr_deck, y = -0.075), 
               fill = "purple", width = 0.05) +
  scale_x_log10() +
  labs(title = "VR Deck Expenditures",
       x = "Money Spent",
       y = "")

(p_food + p_shop) / (p_spa + p_vr)
```

The distributions of these variables are all quite similar to one another. The distributions are skewed and 0-inflated. The distributions remain left-skewed even when plotted on a logarithmic scale and the observations at 0 are removed. The mean, median, standard deviation, and interquartile range for each expenditure venue are reported below without the removal of those zero observations.

```{r}
train %>%
  pivot_longer(cols = c("room_service", "food_court", "shopping_mall", "spa", "vr_deck"), 
               names_to = "Venue",
               values_to = "Expenditure") %>%
  select(Venue, Expenditure) %>%
  group_by(Venue) %>%
  summarize(mean_expenditure = mean(Expenditure, na.rm = TRUE),
            median_expenditure = median(Expenditure, na.rm = TRUE),
            sd_expenditure = sd(Expenditure, na.rm = TRUE),
            iqr_expenditure = IQR(Expenditure, na.rm = TRUE)) %>%
  kable() %>%
  kable_styling(bootstrap_options = c("hover", "striped"))
```

The same metrics are reported below after removal of the zero expenditure values. That is, the summary metrics reported below consider only passengers who utilized the corresponding services. These values will align with measures indicated from the log-scale plots above.

```{r}
train %>%
  pivot_longer(cols = c("room_service", "food_court", "shopping_mall", "spa", "vr_deck"), 
               names_to = "Venue",
               values_to = "Expenditure") %>%
  select(Venue, Expenditure) %>%
  filter(Expenditure > 0) %>%
  group_by(Venue) %>%
  summarize(mean_expenditure = mean(Expenditure, na.rm = TRUE),
            median_expenditure = median(Expenditure, na.rm = TRUE),
            sd_expenditure = sd(Expenditure, na.rm = TRUE),
            iqr_expenditure = IQR(Expenditure, na.rm = TRUE)) %>%
  kable() %>%
  kable_styling(bootstrap_options = c("hover", "striped"))
```

(Note, an alternate version of this plot is more condensed, quicker to create, and appears below...)


```{r message = FALSE}
train %>%
  pivot_longer(cols = c("room_service", "food_court", "shopping_mall", "spa", "vr_deck"), 
               names_to = "Venue",
               values_to = "Expenditure") %>%
  select(Venue, Expenditure) %>%
  filter(Expenditure > 0) %>%
  ggplot() + 
  geom_density_ridges(aes(x = Expenditure, y = Venue, fill = Venue),
                      scale = 0.5) + 
  geom_boxplot(aes(x = Expenditure, fill = Venue, y = Venue), width = 0.05) + 
  scale_x_log10(labels = scales::dollar_format()) + 
  labs(title = "Expenditure Distributions",
       x = "Money Spent",
       y = "") + 
  theme(legend.position = "None")
```

Now that we understand the individual distributions of the variables, its time to look at how these predictors are associated with out response variable (`transported`). We'll begin by looking for associations between `transported` and the categorical variables.

```{r fig.width = 10, fig.height = 5}
p_home <- train %>%
  mutate(transported = ifelse(transported == TRUE, "yes", "no")) %>%
  ggplot() + 
  geom_bar(aes(y = home_planet,
               fill = transported),
           position = "dodge",
           show.legend = FALSE) + 
  labs(title = "Home Planet and Transport",
       x = "Count",
       y = "")

p_cryo <- train %>%
  mutate(transported = ifelse(transported == TRUE, "yes", "no"),
         cryo_sleep = ifelse(cryo_sleep == TRUE, "yes", "no")) %>%
  ggplot() + 
  geom_bar(aes(x = cryo_sleep,
               fill = transported),
           position = "dodge") + 
  labs(title = "Cryo Sleep and Transport",
       x = "",
       y = "Count")

p_destination <- train %>%
  mutate(transported = ifelse(transported == TRUE, "yes", "no")) %>%
  ggplot() + 
  geom_bar(aes(y = destination,
               fill = transported),
           position = "dodge",
           show.legend = FALSE) + 
  labs(title = "Destination and Transport",
       x = "Count",
       y = "")

p_vip <- train %>%
  mutate(transported = ifelse(transported == TRUE, "yes", "no"),
         vip = ifelse(vip == TRUE, "yes", "no")) %>%
  ggplot() + 
  geom_bar(aes(x = vip,
               fill = transported),
           position = "fill",
           show.legend = FALSE) + 
  labs(title = "VIP Status and Transport",
       x = "",
       y = "Proportion")

(p_home + p_cryo) / (p_destination + p_vip)
```

From the four plots above, we have the following takeaways. First, the plot on the left shows the passengers from Europa were much more likely to be transported than passengers from Mars or Earth. Passengers from Earth had a less than 50% transport rate while passengers from Mars had a slightly larger than 50% transport rate. Passengers in Cryo Sleep had an extremely elevated likelihood of transport than those who did not take advantage of Cryo Sleep. There were slight differences in transport rates by destination and by VIP status, but the choice to undergo Cryo Sleep seems to have been the largest influence over whether passengers were transported or not.

Now we'll consider how the numerical features may be associated with the `transported` status of passengers.

```{r message = FALSE, warning = FALSE}
train %>%
  pivot_longer(cols = c("room_service", "food_court", "shopping_mall", "spa", "vr_deck"), 
               names_to = "Venue",
               values_to = "Expenditure") %>%
  mutate(transported = ifelse(transported == TRUE, "transported", "not")) %>%
  ggplot() + 
  geom_boxplot(aes(x = Expenditure,
                   y = transported,
                   fill = Venue),
               show.legend = FALSE) +
  scale_x_log10() +
  facet_wrap(~Venue) + 
  labs(title = "",
       x = "Expenditure",
       y = "")
```

In the group of plots appearing above, we see that higher food court and shopping mall expenditures were associate with those passengers who were transported than those who were not. Those individuals not being transported had higher room service, spa, and VR deck expenditures on average than those who were not transported.

As a result of this exploratory analysis, we've identified several important insights as we proceed to the model construction phase of this analysis. Firstly, about half of passengers were transported to an alternate dimension while the other half were transported safely. All of the numerical features are very heavily right-skewed aside from age. The variable most strongly associated with whether or not a passenger was transported may be the choice to Cryo Sleep during the flight. Other variables showed associations as well, but were less pronounced.

***

**Note:** The code is being output in this document for your benefit. In general, we shouldn't print code out into a final notebook unless there is very good reason to. You can supress all of the code printouts by either adding `echo = FALSE` inside of the curly braces at the beginning of each code block, or by adding the following lines to the YAML header.

```{r echo = TRUE, eval = FALSE}
knitr:
  opts_chunk:
    echo: FALSE
```
